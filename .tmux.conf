##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

set -g set-titles on
set -g set-titles-string "#T"
# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
# Send to system clipboard
bind -T copy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Reset Prefix
set -g prefix C-a
# For nested tmux sessions
bind-key a send-prefix

# Global options ---------------------------------------------------------
# large shell history
set-option -g history-limit 20000

# colors
# setw -g mode-bg 0
# setw -g mode-fg 1
# setw -g mode-bg green
# set-option -g default-terminal "screen-256color" # "tmux-256color" #"xterm-256color"

set -g default-terminal "alacritty"
set-option -ga terminal-overrides ",alacritty:Tc"
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# set-option -g pane-active-border-fg 3

# utf8 support
#set-window-option -g utf8 on

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
# set-window-option -g window-status-current-fg 0
# setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename

# set -g pane-border-fg 1
# set -g pane-border-bg default
# set -g pane-active-border-fg 1
# set -g pane-active-border-bg default
set -g status-justify centre

# use mouse
# More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-select-pane on
set -g mouse on
set -g history-limit 30000
set -ag terminal-overrides 'xterm*:smcup@:rmcup@'

# Status Bar -------------------------------------------------------------
# set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
# set-option -g status-fg cyan
# set-option -g status-interval 5
#set-option -g status-left-length 50
# v1
# set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
# set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
# v2
set-option -g status-left ''
set-option -g status-right ''
set -g status-justify centre

set-option -g visual-activity on

# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'


# Unbindings -------------------------------------------------------------
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split


# Bindings --------------------------------------------------------------

# reload configuartion
bind-key r source-file ~/.tmux.conf

# toggle keystroke input sharing between all panes in the current window
bind e setw synchronize-panes

# new split in current pane (horizontal / vertical)
bind-key c split-window -v -c '#{pane_current_path}' # split pane horizontally
bind-key v split-window -h -c '#{pane_current_path}' # split pane vertically

# list panes
# bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

# previous pane
bind-key -n C-up prev
bind-key -n C-left prev

# next pane
bind-key -n C-right next
bind-key -n C-down next

# Windows ----------------------------------------------------------------
# set-window-option -g window-status-current-bg 1
# set-window-option -g window-status-bg 0
# set-window-option -g window-status-fg 1
set-window-option -g window-status-current-format "*:#W #(icon_lookup #W)"
set-window-option -g window-status-format "#I:#W #(icon_lookup #W)"
# set-window-option -g window-status-fg 
# set-window-option -g window-status-bg 0


bind C-j previous-window
bind C-k next-window
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window \"%%\""
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on


# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R

bind-key b set-option -g status

# use vim motion keys while in copy mode
setw -g mode-keys vi

# Layouts ----------------------------------------------------------------
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window


# focus on first window
# select-window -t 0

# Panes ------------------------------------------------------------------
# 'almost' seemless intergration between vim split navigation and panes
set -g focus-events on

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# disable status bar by default
set -g status off
# lower response time for commands
set-option -sg escape-time 10
